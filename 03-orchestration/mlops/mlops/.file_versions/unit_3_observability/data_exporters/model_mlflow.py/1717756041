import mlflow
from sklearn.base import BaseEstimator
from typing import Callable, Dict, Tuple, Union
from scipy.sparse._csr import csr_matrix



if 'data_exporter' not in globals():
    from mage_ai.data_preparation.decorators import data_exporter


@data_exporter
def export_data(info: Tuple[model: BaseEstimator,
                model_info: dict,
                X: csr_matrix],
                *args, **kwargs):
    """
    Exports data to some source.

    Args:
        data: The output from the upstream parent block
        args: The output from any additional upstream blocks (if applicable)

    Output (optional):
        Optionally return any object and it'll be logged and
        displayed when inspecting the block run.
    """
    model, model_info, X = 
    # Specify your data exporting logic here
    mlflow.set_tracking_uri(uri="http://localhost:5000")
    mlflow.set_experiment("lr_model_mage")

    with mlflow.start_run():
        mlflow.log_params(model_info)
        model_info = mlflow.sklearn.log_model(
            sk_model=model,
            artifact_path="lr_model",
            input_example=X,
            registered_model_name="tracking-quickstart",
        )